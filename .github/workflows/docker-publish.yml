name: Package & Publish Native App

on:
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  compile-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          
  build-and-publish-executable-and-image:
    needs: [ compile-and-test ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Setup GraalVM environment
        if: success()
        uses: DeLaGuardo/setup-graalvm@3
        with:
          graalvm-version: '20.0.0.java11'

      - name: Install GraalVM's native-image extension
        if: success()
        run: gu install native-image   
      
      - name: Generate Native Image with Maven
        run: ./mvnw package -Dpackaging=native-image
      
      - name: Archive Native Executable
        uses: actions/upload-artifact@v3
        with:
          name:  mongo-micronaut-dessert-server-${{ steps.meta.outputs.tags }}
          path: target/mongomicronaut
          
      - name: Publish Native Executable Image
        if: success()
        uses: softprops/action-gh-release@v0.1.14
        with:
          files: target/mongomicronaut
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
      - name: Build a docker image
        run: ./mvnw package -Dpackaging=docker-native -Pgraalvm

      - name: Setup Docker
        uses: docker-practice/actions-setup-docker@1.0.9

      - name: Rename and Push Docker image
        run: | 
          docker tag micronaut:latest ${{ env.REGISTRY }}/${{ github.actor }}/micronaut-dessert-server:latest
          docker push  ${{ env.REGISTRY }}/${{ github.actor }}/micronaut-dessert-server:latest
